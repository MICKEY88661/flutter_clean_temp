// Mocks generated by Mockito 5.3.0 from annotations
// in pavo11_flutter/test/presentation/news_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pavo11_flutter/domain/entities/news_entity.dart' as _i5;
import 'package:pavo11_flutter/domain/i_repositories/i_news_repo.dart' as _i2;
import 'package:pavo11_flutter/domain/services/news_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeINewsRepository_0 extends _i1.SmartFake
    implements _i2.INewsRepository {
  _FakeINewsRepository_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [NewsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsService extends _i1.Mock implements _i3.NewsService {
  MockNewsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.INewsRepository get newsRepository => (super.noSuchMethod(
          Invocation.getter(#newsRepository),
          returnValue:
              _FakeINewsRepository_0(this, Invocation.getter(#newsRepository)))
      as _i2.INewsRepository);
  @override
  _i4.Future<List<_i5.NewsEntity>> getLatetNews() =>
      (super.noSuchMethod(Invocation.method(#getLatetNews, []),
              returnValue:
                  _i4.Future<List<_i5.NewsEntity>>.value(<_i5.NewsEntity>[]))
          as _i4.Future<List<_i5.NewsEntity>>);
}
